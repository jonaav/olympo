--PAQUETE PA USAR CON EL PROGRAMA
--PAQUETE persona
create or replace PACKAGE pack_persona
IS
    TYPE c_salida IS REF CURSOR;
    PROCEDURE mostrar_persona(salida out c_salida);
    PROCEDURE registrar_persona(P_dni IN "Persona".DNI_PERSONA%TYPE,
                                P_nombre IN "Persona".nombres_persona%TYPE,
                                P_apellidos IN "Persona".apellidos_persona%TYPE,
                                P_correo IN "Persona".correo_persona%TYPE,
                                P_celular IN "Persona".celular_persona%TYPE, 
                                P_fecha IN "Persona".fec_nac_persona%type);
    PROCEDURE actualizar_persona(p_id IN "Persona".persona_id%type, 
                                P_dni IN "Persona".dni_persona%TYPE,
                                P_nombre IN "Persona".nombres_persona%TYPE,
                                P_apellidos IN "Persona".apellidos_persona%TYPE,
                                P_correo IN "Persona".correo_persona%TYPE,
                                P_celular IN "Persona".celular_persona%TYPE, 
                                P_fecha IN "Persona".fec_nac_persona%type);
    PROCEDURE eliminar_persona(p_id IN "Persona".persona_id%type);
END pack_persona;

CREATE OR REPLACE PACKAGE BODY pack_persona
IS
    PROCEDURE mostrar_persona(salida OUT c_salida)
    IS
    BEGIN
        OPEN salida FOR
        SELECT  persona_id, dni_persona, nombres_persona, apellidos_persona, correo_persona, celular_persona,fec_nac_persona
        FROM "Persona";
    END;
    
    PROCEDURE registrar_persona (   
				P_dni IN "Persona".dni_persona%TYPE,
				P_nombre IN "Persona".nombres_persona%TYPE,
				P_apellidos IN "Persona".apellidos_persona%TYPE,
                P_correo IN "Persona".correo_persona%TYPE,
				P_celular IN "Persona".celular_persona%TYPE, 
				P_fecha IN "Persona".fec_nac_persona%type)
    IS
    BEGIN
        INSERT INTO "Persona"(persona_id, dni_persona, nombres_persona, apellidos_persona, correo_persona, celular_persona,fec_nac_persona)
        VALUES(PERSONA_SEC.NEXTVAL, P_dni, P_nombre, P_apellidos, P_correo, P_celular, P_fecha  );
    EXCEPTION
        WHEN DUP_VAL_ON_INDEX THEN  DBMS_OUTPUT.PUT_LINE('Se intentó ingresar una persona duplicada');
    END registrar_persona;
    
    PROCEDURE actualizar_persona (  
                		P_id IN "Persona".persona_id%TYPE,
                        P_dni IN "Persona".dni_persona%TYPE,
                        P_nombre IN "Persona".nombres_persona%TYPE,
                        P_apellidos IN "Persona".apellidos_persona%TYPE,
                        P_correo IN "Persona".correo_persona%TYPE,
                        P_celular IN "Persona".celular_persona%TYPE, 
                        P_fecha IN "Persona".fec_nac_persona%TYPE)
    IS
    BEGIN
        UPDATE "Persona" SET  dni_persona = P_dni, 
                            nombres_persona=P_nombre, 
                            apellidos_persona=P_apellidos, 
                            correo_persona=P_correo, 
                            celular_persona=P_celular,
                            fec_nac_persona = P_fecha WHERE persona_id = p_id;
    END actualizar_persona;
    PROCEDURE eliminar_persona (p_id IN "Persona".persona_id%TYPE)
    IS
    BEGIN
        DELETE FROM "Persona" WHERE persona_id = p_id;
    END eliminar_persona;
END pack_persona;